name: 'Create Pull Request for Submodule Update'
description: >
  This action updates a submodule of the target repository in a feature branch
  and opens a pull request against the main branch to commit changes
author: 'foxzi'

branding:
  icon: 'git-pull-request'
  color: 'green'

inputs:
  github_token:
    description: 'GitHub token'
    required: true
  target_repository:
    description: 'Target repository name with owner'
    required: true
  checkout_branch:
    description: 'Branch to checkout'
    required: false
    default: 'master'
  feature_branch:
    description: 'Feature branch'
    required: false
    default: 'bot/update-submodule'
  pr_against_branch:
    description: 'Branch to create pool request against'
    required: true
  pr_title:
    description: 'Title of pull request'
    required: false
    default: '[Auto-generated] Update submodule'
  commit_user_name:
    description: 'User name for commit'
    default: 'TarantoolBot'
    required: false
  commit_user_email:
    description: 'User email for commit'
    default: 'bot@tarantool.io'
    required: false
  commit_message:
    description: 'Message for commit'
    default: 'Update submodule'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Checkout target repository
      uses: actions/checkout@v2
      with:
        token: ${{ inputs.github_token }}
        repository: ${{ inputs.target_repository }}
        ref: ${{ inputs.checkout_branch }}
        submodules: true
        fetch-depth: 0

    - name: Create new branch and push changes
      shell: bash
      run: |
        git config user.name ${{ inputs.commit_user_name }}
        git config user.email ${{ inputs.commit_user_email }}
        git submodule update --remote
        git checkout -b "${{ inputs.feature_branch }}"
        git commit -am "${{ inputs.commit_message }}"
        git push --set-upstream --force origin "${{ inputs.feature_branch }}"

    - name: Create pull request against main branch
      uses: actions/github-script@v5
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          await github.rest.pulls.create({
            owner: '${{ inputs.target_repository }}'.split('/')[0].trim(),
            repo: '${{ inputs.target_repository }}'.split('/')[1].trim(),
            head: '${{ inputs.feature_branch }}',
            base: '${{ inputs.pr_against_branch }}',
            title: '${{ inputs.pr_title }}',
            body: '${{ inputs.pr_title }}',
          });
      continue-on-error: true
